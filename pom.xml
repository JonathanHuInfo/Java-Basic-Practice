<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.jonathan</groupId>
    <artifactId>actual-fromwork</artifactId>
    <packaging>pom</packaging>
    <version>${revision}</version>
    <name>Actual Fromwork ${revision}</name>
    <modules>
        <module>user-web</module>
        <module>ac-configuration</module>
        <module>ac-dependency-injection</module>
        <module>ac-reactive-messaging</module>
        <module>ac-rest-client</module>
        <module>ac-web-mvc</module>
        <module>ac-cache</module>
    </modules>
    <scm>
        <url>https://github.com/JonathanHuInfo/actual-fromwork</url>
        <connection>
            scm:git@github.com:JonathanHuInfo/actual-fromwork.git
        </connection>
        <developerConnection>
            scm:git:ssh://git@github.com:JonathanHuInfo/actual-fromwork.git
        </developerConnection>
        <tag>HEAD</tag>
    </scm>

    <developers>
        <developer>
            <id>jonathan</id>
            <name>Jonathan Hu</name>
            <email>persesniper@gmail.com</email>
            <organization>Freelance</organization>
            <url>https://github.com/JonathanHuInfo</url>
        </developer>
    </developers>

    <properties>
        <revision>v1-SNAPSHOT</revision>
        <file.encoding>UTF-8</file.encoding>
        <project.build.sourceEncoding>${file.encoding}</project.build.sourceEncoding>

        <!-- Artifacts 依赖版本 -->
        <javax.servlet-api.version>3.1.0</javax.servlet-api.version>
        <javax.ws.rs-api.version>2.0.1</javax.ws.rs-api.version>
        <jstl.version>1.2</jstl.version>
        <javax.annotation-api.version>1.3.2</javax.annotation-api.version>
        <javax.inject.version>1</javax.inject.version>
        <javax.cdi-api.version>2.0</javax.cdi-api.version>
        <javax.cache-api.version>1.1.1</javax.cache-api.version>

        <!-- MicroProfile 版本-->
        <microprofile-config-api.version>2.0</microprofile-config-api.version>
        <microprofile-rest-client-api.version>2.0</microprofile-rest-client-api.version>
        <microprofile-reactive-messaging-api.version>1.0</microprofile-reactive-messaging-api.version>

        <!-- 第三方开源依赖版本-->
        <commons-lang.version>2.6</commons-lang.version>
        <commons-io.version>2.4</commons-io.version>
        <commons-validator.version>1.7</commons-validator.version>
        <commons-configuration.version>1.10</commons-configuration.version>
        <derby.version>10.1.3.1</derby.version>
        <hibernate.version>5.4.29.Final</hibernate.version>
        <hibernate.validator.version>5.4.3.Final</hibernate.validator.version>
        <glassfish-el.version>3.0.1-b08</glassfish-el.version>
        <jackson.version>2.9.5</jackson.version>
        <activemq.version>5.9.1</activemq.version>
        <jolokia.version>1.6.2</jolokia.version>
        <resteasy.version>3.0.2.Final</resteasy.version>
        <tomcat7.version>7.0.37</tomcat7.version>
        <lettuce.version>6.1.0.RELEASE</lettuce.version>
        <jedis.version>3.5.2</jedis.version>

        <!-- Testing 版本 -->
        <junit.version>5.7.1</junit.version>
        <!-- Maven Plugins 版本 -->
        <maven.compiler.version>3.8.1</maven.compiler.version>
        <maven.source.version>3.2.1</maven.source.version>
        <maven.jar.version>3.2.0</maven.jar.version>
        <maven.war.version>3.3.1</maven.war.version>
        <maven.deploy.version>2.8.2</maven.deploy.version>
        <maven.flatten.version>1.2.5</maven.flatten.version>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
    </properties>

    <!-- Artifacts 依赖版本管理 -->
    <dependencyManagement>

        <dependencies>
            <!-- Servlet 3.1 API -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${javax.servlet-api.version}</version>
            </dependency>

            <!-- JAX-RS API -->
            <dependency>
                <groupId>javax.ws.rs</groupId>
                <artifactId>javax.ws.rs-api</artifactId>
                <version>${javax.ws.rs-api.version}</version>
            </dependency>

            <!-- JSTL -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>jstl</artifactId>
                <version>${jstl.version}</version>
            </dependency>

            <!-- Java Commons Annotations -->
            <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>javax.annotation-api</artifactId>
                <version>${javax.annotation-api.version}</version>
            </dependency>

            <!-- Java Inject API -->
            <dependency>
                <groupId>javax.inject</groupId>
                <artifactId>javax.inject</artifactId>
                <version>${javax.inject.version}</version>
            </dependency>

            <!-- Java CDI API -->
            <dependency>
                <groupId>javax.enterprise</groupId>
                <artifactId>cdi-api</artifactId>
                <version>${javax.cdi-api.version}</version>
            </dependency>

            <!-- Java Cache API -->
            <dependency>
                <groupId>javax.cache</groupId>
                <artifactId>cache-api</artifactId>
                <version>${javax.cache-api.version}</version>
            </dependency>


            <!-- MicroProfile -->
            <dependency>
                <groupId>org.eclipse.microprofile.config</groupId>
                <artifactId>microprofile-config-api</artifactId>
                <version>${microprofile-config-api.version}</version>
            </dependency>

            <dependency>
                <groupId>org.eclipse.microprofile.rest.client</groupId>
                <artifactId>microprofile-rest-client-api</artifactId>
                <version>${microprofile-rest-client-api.version}</version>
            </dependency>

            <dependency>
                <groupId>org.eclipse.microprofile.reactive.messaging</groupId>
                <artifactId>microprofile-reactive-messaging-api</artifactId>
                <version>${microprofile-reactive-messaging-api.version}</version>
            </dependency>


            <!-- Third-Party Dependencies -->

            <!-- Apache Commons Language -->
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${commons-lang.version}</version>
            </dependency>

            <!-- Apache Commons I/O -->
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>

            <!-- Apache Commons Validator -->
            <dependency>
                <groupId>commons-validator</groupId>
                <artifactId>commons-validator</artifactId>
                <version>${commons-validator.version}</version>
            </dependency>

            <!-- Apache Commons Configuration -->
            <dependency>
                <groupId>commons-configuration</groupId>
                <artifactId>commons-configuration</artifactId>
                <version>${commons-configuration.version}</version>
            </dependency>

            <!-- Java DB -->
            <dependency>
                <groupId>org.apache.derby</groupId>
                <artifactId>derby</artifactId>
                <version>${derby.version}</version>
            </dependency>

            <!-- Hibernate ORM Core -->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${hibernate.version}</version>
            </dependency>

            <!-- Hibernate JPA support -->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-entitymanager</artifactId>
                <version>${hibernate.version}</version>
            </dependency>

            <!-- Hibernate Validator -->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate.validator.version}</version>
            </dependency>

            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>javax.el</artifactId>
                <version>${glassfish-el.version}</version>
            </dependency>

            <!-- Jackson -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <!-- Apache ActiveMQ -->
            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>activemq-all</artifactId>
                <version>${activemq.version}</version>
            </dependency>

            <!--  Jboss resteasy -->
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-client</artifactId>
                <version>${resteasy.version}</version>
            </dependency>

            <!-- Apache Tomcat -->
            <dependency>
                <groupId>org.apache.tomcat</groupId>
                <artifactId>tomcat-catalina-ha</artifactId>
                <version>${tomcat7.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.tomcat</groupId>
                <artifactId>tomcat-dbcp</artifactId>
                <version>${tomcat7.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.tomcat</groupId>
                <artifactId>tomcat-jdbc</artifactId>
                <version>${tomcat7.version}</version>
            </dependency>

            <!-- Redis Java Client - Lettuce -->
            <dependency>
                <groupId>io.lettuce</groupId>
                <artifactId>lettuce-core</artifactId>
                <version>${lettuce.version}</version>
            </dependency>

            <dependency>
                <groupId>redis.clients</groupId>
                <artifactId>jedis</artifactId>
                <version>${jedis.version}</version>
            </dependency>
            <!-- Testing Dependencies -->

            <!-- JUnit -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>

            <!--  jolokia -->
            <dependency>
                <groupId>org.jolokia</groupId>
                <artifactId>jolokia-client-java</artifactId>
                <version>${jolokia.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jolokia</groupId>
                <artifactId>jolokia-core</artifactId>
                <version>${jolokia.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <pluginManagement>
            <plugins>
                <!-- 源文件的打包插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven.source.version}</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- 主要是为了用来将artifact部署到远程仓库中 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven.deploy.version}</version>
                </plugin>

                <!-- 用于生成META-INF/MANIFEST.MF文件的部分内容 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven.jar.version}</version>
                </plugin>

                <!-- war 打包插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven.war.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <!-- 编译插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.version}</version>
                <configuration>
                    <compilerArgs>
                        <compilerArg>-proc:none</compilerArg>
                        <compilerArg>-parameters</compilerArg>
                    </compilerArgs>
                    <fork>true</fork>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <encoding>${file.encoding}</encoding>
                </configuration>
            </plugin>

            <!--
            生成一个压缩版的pom.xml文件，然后在install和deploy阶段使用压缩后的pom.xml文件，替换原来的pom.xml文件
            -->
            <!-- 应用场景:mvn clean package -Drevision=1.0.0 (改变插值) -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${maven.flatten.version}</version>
                <configuration>
                    <updatePomFile>true</updatePomFile>
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <!--
    应用场景:
    兼容性切换
    发布环境切换
     -->
    <profiles>

        <profile>
            <!-- Commons Lang 2.5 -->
            <id>commons-lang-2.5</id>
            <properties>
                <commons-lang.version>2.5</commons-lang.version>
            </properties>
        </profile>

        <profile>
            <!-- Commons Lang 2.4 -->
            <id>commons-lang-2.4</id>
            <properties>
                <commons-lang.version>2.4</commons-lang.version>
            </properties>
        </profile>

        <profile>
            <!-- Commons Lang 2.3 -->
            <id>commons-lang-2.3</id>
            <properties>
                <commons-lang.version>2.3</commons-lang.version>
            </properties>
        </profile>

        <profile>
            <id>tomcat-7</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <!-- Tomcat Maven 插件用于构建可执行 war -->
                        <!-- Tomcat 7.x 官方文档：
                        http://tomcat.apache.org/tomcat-7.0-doc/index.html
                        -->
                        <plugin>
                            <groupId>org.apache.tomcat.maven</groupId>
                            <artifactId>tomcat7-maven-plugin</artifactId>
                            <version>2.1</version>
                        </plugin>
                    </plugins>
                </pluginManagement>

            </build>
        </profile>

        <profile>
            <id>tomcat-8</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <!-- Tomcat 8 Maven 插件用于构建可执行 war -->
                        <!-- https://mvnrepository.com/artifact/org.apache.tomcat.maven/tomcat8-maven-plugin -->
                        <plugin>
                            <groupId>org.apache.tomcat.maven</groupId>
                            <artifactId>tomcat8-maven-plugin</artifactId>
                            <version>3.0-r1655215</version>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
            <pluginRepositories>
                <pluginRepository>
                    <!-- tomcat8-maven-plugin 所在仓库 -->
                    <id>Alfresco</id>
                    <name>Alfresco Repository</name>
                    <url>https://artifacts.alfresco.com/nexus/content/repositories/public/</url>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </pluginRepository>
            </pluginRepositories>
        </profile>
    </profiles>
    <!-- 配置远程仓库 如果需要deploy 到远程仓库需要 setting.xml 配置 仓库账号  -->
    <!-- <distributionManagement>
         <repository>
             <id>nexus-releases</id>
             <name>Nexus Release Repository</name>
             <url>http://39.98.242.200:19961/repository/maven-releases/</url>
         </repository>
         <snapshotRepository>
             <id>nexus-snapshots</id>
             <name>Nexus Snapshot Repository</name>
             <url>http://39.98.242.200:19961/repository/maven-snapshots/</url>
         </snapshotRepository>
     </distributionManagement>
     <repositories>
         <repository>
             <id>Nexus</id>
             <name>Nexus Repository</name>
             <url>http://39.98.242.200:19961/repository/maven-public/</url>
             <releases>
                 <enabled>true</enabled>
             </releases>
             &lt;!&ndash;snapshots默认是关闭的,需要开启  &ndash;&gt;
             <snapshots>
                 <enabled>true</enabled>
             </snapshots>
         </repository>
     </repositories>-->
</project>
